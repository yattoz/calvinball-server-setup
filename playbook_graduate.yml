
- name: The Play
  hosts: localhost
  vars_files:
    - vars/users.yml
    - vars/packages.yml
    - vars/runtime_credentials.vault.yml
    - vars/graduated_credentials.vault.yml
  vars:
    install_dir: /opt/calvinball-website
    cockpit_module_install_dir: /opt/cockpit_modules/cvb-rebuild-site

  task:

    - name: Template backup credentials
      ansible.builtin.template:
        src: "{{ install_dir }}/backup_to_nas.sh.example"
        dest: "{{ install_dir }}/backup_to_nas.sh"
        mode: 'u+rwx'

    - name: Fetch all files from backup
      become: true
      become_user: developer
      ansible.builtin.command:
        cmd: "rclone copy {{ vault_rclone_config_name }}:{{ vault_backup_server_backup_dir }}{{ item.src }} {{ item.src }}"
      loop: "{{ web_content_folders }}"


## create cron jobs

    - name: Set MAILTO to nothing
      ansible.builtin.cron:
        env: true
        name: MAILTO
        job: ""
        state: present

    - name: Create cron job for periodic remote checks
      ansible.builtin.cron:
        name: "periodic remote checks"
        user: developer
        job: "cd \"{{ install_dir }}\" && echo \"start\" > start.log && bundle exec ruby scripts/podcast_resources.rb 2>&1 > podcast_resources.log "
        minute: "13,28,43,58"

    - name: Cron job to backup to NAS
      ansible.builtin.cron:
        name: "backup to NAS"
        user: developer
        job: "{{ install_dir }}/backup_to_nas.sh"
        minute: "0"
        hour: "1"

    - name: Copy all nginx config files
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/nginx/sites-available
        mode: preserve
      with_fileglob:
        - "{{ install_dir }}/server_config/etc/nginx/sites-available/*"

    - name: symlink sites-available to sites-enabled
      file:
        src: "/etc/nginx/sites-available/{{ item | basename }}"
        dest: "/etc/nginx/sites-enabled/{{ item | basename }}"
        state: link
        force: true # some folders aren't created yet like dev.dist but we want the link anyway
      with_fileglob:
        - /etc/nginx/sites-available/*

    - name: Reload nginx
      ansible.builtin.systemd:
        name: nginx.service
        state: restarted
        enabled: true
        daemon_reload: true